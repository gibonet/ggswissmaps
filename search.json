[{"path":[]},{"path":"http://gibonet.github.io/ggswissmaps/articles/ggswissmaps_intro.html","id":"using-the-data","dir":"Articles","previous_headings":"Examples","what":"Using the data","title":"`ggswissmaps` Intro","text":"","code":"library(ggswissmaps)  data(\"shp_df\") class(shp_df) #> [1] \"list\" length(shp_df) #> [1] 8 names(shp_df) #> [1] \"g1b15\"      \"g1g15_encl\" \"g1g15_li\"   \"g1g15\"      \"g1k15\"      #> [6] \"g1l15\"      \"g1r15\"      \"g1s15\" # Data description ?shp_df"},{"path":"http://gibonet.github.io/ggswissmaps/articles/ggswissmaps_intro.html","id":"some-maps","dir":"Articles","previous_headings":"Examples","what":"Some maps","title":"`ggswissmaps` Intro","text":"objects contained maps2 ggplot objects. created ggplot2::ggplot plus ggplot2::geom_path layer data shp_df. example, previous map :","code":"names(maps2) #> [1] \"g1b15\"      \"g1g15_encl\" \"g1g15_li\"   \"g1g15\"      \"g1k15\"      #> [6] \"g1l15\"      \"g1r15\"      \"g1s15\"  # By name maps2[[\"g1k15\"]] # By index maps2[[5]] library(ggplot2) ggplot(shp_df[[\"g1k15\"]], aes(x = long, y = lat, group = group)) +   geom_path() +   coord_equal() +   theme_white_f() +   labs(x = NULL, y = NULL, caption = \"Boundaries: BFS GEOSTAT / swisstopo\")"},{"path":"http://gibonet.github.io/ggswissmaps/articles/ggswissmaps_intro.html","id":"extract-a-subset-of-a-territory-and-make-a-map","dir":"Articles","previous_headings":"Examples","what":"Extract a subset of a territory and make a map","title":"`ggswissmaps` Intro","text":"maps2 object, used , list maps swiss territory various levels (grand regions, cantons, districts, …). one wants draw map sub-territory? example, want map districts two cantons? First, select desired subset shp_df data, apply maps2_ function .","code":"# Data frame with the coordinates of all swiss districts d <- shp_df[[\"g1b15\"]]  # Look at the structure of the data frame str(d) #> 'data.frame':    19502 obs. of  21 variables: #>  $ long   : int  679207 680062 679981 680365 680281 680479 680717 681021 680799 680921 ... #>  $ lat    : int  245176 244294 244051 243411 241866 241584 240695 240306 239935 239595 ... #>  $ order  : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ hole   : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ piece  : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ group  : Factor w/ 192 levels \"0.1\",\"1.1\",\"10.1\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ id     : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ BZNR   : int  101 101 101 101 101 101 101 101 101 101 ... #>  $ KTNR   : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ GRNR   : int  4 4 4 4 4 4 4 4 4 4 ... #>  $ AREA_HA: int  11303 11303 11303 11303 11303 11303 11303 11303 11303 11303 ... #>  $ X_MIN  : int  671862 671862 671862 671862 671862 671862 671862 671862 671862 671862 ... #>  $ X_MAX  : int  686462 686462 686462 686462 686462 686462 686462 686462 686462 686462 ... #>  $ Y_MIN  : int  229137 229137 229137 229137 229137 229137 229137 229137 229137 229137 ... #>  $ Y_MAX  : int  245396 245396 245396 245396 245396 245396 245396 245396 245396 245396 ... #>  $ X_CNTR : int  678300 678300 678300 678300 678300 678300 678300 678300 678300 678300 ... #>  $ Y_CNTR : int  235900 235900 235900 235900 235900 235900 235900 235900 235900 235900 ... #>  $ Z_MIN  : int  380 380 380 380 380 380 380 380 380 380 ... #>  $ Z_MAX  : int  914 914 914 914 914 914 914 914 914 914 ... #>  $ Z_AVG  : int  561 561 561 561 561 561 561 561 561 561 ... #>  $ Z_MED  : int  557 557 557 557 557 557 557 557 557 557 ...  # The cantons are identified by the KTNR column  # Extract from this data the districts of two cantons library(dplyr) d <- d %>% dplyr::filter(KTNR %in% c(18, 21))  # And draw the map maps2_(d)"},{"path":"http://gibonet.github.io/ggswissmaps/articles/ggswissmaps_with_sf.html","id":"use-ggswissmaps-with-sf","dir":"Articles","previous_headings":"","what":"Use ggswissmaps with sf","title":"`ggswissmaps` data with `sf`","text":"boundaries stored list shp_sf can used ggplot2::geom_sf():  gray background can removed example ggswissmaps::theme_white_f() ggplot2 themes, gray background inside boundaries can removed setting fill = NA ggplot2::geom_sf():","code":"library(ggplot2) ggplot(shp_sf[[\"g1k15\"]]) + geom_sf() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() ggplot(shp_sf[[\"g1k15\"]]) +    geom_sf(fill = NA) +    ggswissmaps::theme_white_f() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> old-style crs object detected; please recreate object with a recent sf::st_crs()"},{"path":"http://gibonet.github.io/ggswissmaps/articles/ggswissmaps_with_sf.html","id":"coordinate-reference-system-crs","dir":"Articles","previous_headings":"","what":"Coordinate reference system (crs)","title":"`ggswissmaps` data with `sf`","text":"Note ‘sf’ data frames stored list shp_sf coordinate reference system (crs) corresponding “EPSG: 21781”. can verified sf::st_crs(): think “old” swiss crs, newest one “EPSG: 2056”. order change crs can use st::st_transform():","code":"library(sf) #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is TRUE st_crs(shp_sf[[1]]) #> old-style crs object detected; please recreate object with a recent sf::st_crs() #> Coordinate Reference System: #>   User input: EPSG:21781  #>   wkt: #> PROJCRS[\"CH1903 / LV03\", #>     BASEGEOGCRS[\"CH1903\", #>         DATUM[\"CH1903\", #>             ELLIPSOID[\"Bessel 1841\",6377397.155,299.1528128, #>                 LENGTHUNIT[\"metre\",1]]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>         ID[\"EPSG\",4149]], #>     CONVERSION[\"Swiss Oblique Mercator 1903M\", #>         METHOD[\"Hotine Oblique Mercator (variant B)\", #>             ID[\"EPSG\",9815]], #>         PARAMETER[\"Latitude of projection centre\",46.9524055555556, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8811]], #>         PARAMETER[\"Longitude of projection centre\",7.43958333333333, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8812]], #>         PARAMETER[\"Azimuth of initial line\",90, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8813]], #>         PARAMETER[\"Angle from Rectified to Skew Grid\",90, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8814]], #>         PARAMETER[\"Scale factor on initial line\",1, #>             SCALEUNIT[\"unity\",1], #>             ID[\"EPSG\",8815]], #>         PARAMETER[\"Easting at projection centre\",600000, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8816]], #>         PARAMETER[\"Northing at projection centre\",200000, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8817]]], #>     CS[Cartesian,2], #>         AXIS[\"easting (Y)\",east, #>             ORDER[1], #>             LENGTHUNIT[\"metre\",1]], #>         AXIS[\"northing (X)\",north, #>             ORDER[2], #>             LENGTHUNIT[\"metre\",1]], #>     USAGE[ #>         SCOPE[\"Cadastre, engineering survey, topographic mapping (large and medium scale).\"], #>         AREA[\"Liechtenstein; Switzerland.\"], #>         BBOX[45.82,5.96,47.81,10.49]], #>     ID[\"EPSG\",21781]] tmp <- st_transform(shp_sf[[1]], crs = 2056) #> old-style crs object detected; please recreate object with a recent sf::st_crs() st_crs(tmp) #> Coordinate Reference System: #>   User input: EPSG:2056  #>   wkt: #> PROJCRS[\"CH1903+ / LV95\", #>     BASEGEOGCRS[\"CH1903+\", #>         DATUM[\"CH1903+\", #>             ELLIPSOID[\"Bessel 1841\",6377397.155,299.1528128, #>                 LENGTHUNIT[\"metre\",1]]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>         ID[\"EPSG\",4150]], #>     CONVERSION[\"Swiss Oblique Mercator 1995\", #>         METHOD[\"Hotine Oblique Mercator (variant B)\", #>             ID[\"EPSG\",9815]], #>         PARAMETER[\"Latitude of projection centre\",46.9524055555556, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8811]], #>         PARAMETER[\"Longitude of projection centre\",7.43958333333333, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8812]], #>         PARAMETER[\"Azimuth of initial line\",90, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8813]], #>         PARAMETER[\"Angle from Rectified to Skew Grid\",90, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8814]], #>         PARAMETER[\"Scale factor on initial line\",1, #>             SCALEUNIT[\"unity\",1], #>             ID[\"EPSG\",8815]], #>         PARAMETER[\"Easting at projection centre\",2600000, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8816]], #>         PARAMETER[\"Northing at projection centre\",1200000, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8817]]], #>     CS[Cartesian,2], #>         AXIS[\"(E)\",east, #>             ORDER[1], #>             LENGTHUNIT[\"metre\",1]], #>         AXIS[\"(N)\",north, #>             ORDER[2], #>             LENGTHUNIT[\"metre\",1]], #>     USAGE[ #>         SCOPE[\"Cadastre, engineering survey, topographic mapping (large and medium scale).\"], #>         AREA[\"Liechtenstein; Switzerland.\"], #>         BBOX[45.82,5.96,47.81,10.49]], #>     ID[\"EPSG\",2056]]"},{"path":"http://gibonet.github.io/ggswissmaps/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sandro Burri. Author, maintainer. Eric Stephani. Author. Lisa Bottinelli. Contributor.","code":""},{"path":"http://gibonet.github.io/ggswissmaps/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burri S, Stephani E (2025). ggswissmaps: Offers Various Swiss Maps Data Frames 'ggplot2' Objects. R package version 0.1.2, https://github.com/gibonet/ggswissmaps.","code":"@Manual{,   title = {ggswissmaps: Offers Various Swiss Maps as Data Frames and 'ggplot2' Objects},   author = {Sandro Burri and Eric Stephani},   year = {2025},   note = {R package version 0.1.2},   url = {https://github.com/gibonet/ggswissmaps}, }"},{"path":"http://gibonet.github.io/ggswissmaps/index.html","id":"ggswissmaps","dir":"","previous_headings":"","what":"Offers Various Swiss Maps as Data Frames and ggplot2 Objects","title":"Offers Various Swiss Maps as Data Frames and ggplot2 Objects","text":"See ggswissmaps intro introduction. See ggswissmaps data sf examples usage sf data.","code":""},{"path":"http://gibonet.github.io/ggswissmaps/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Offers Various Swiss Maps as Data Frames and ggplot2 Objects","text":"package can installed CRAN: github:","code":"install.packages(\"ggswissmaps\") # install.packages(\"remotes\") remotes::install_github(\"gibonet/ggswissmaps\")"},{"path":"http://gibonet.github.io/ggswissmaps/reference/ggswissmaps-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggswissmaps: Offers Various Swiss Maps as Data Frames and 'ggplot2' Objects — ggswissmaps-package","title":"ggswissmaps: Offers Various Swiss Maps as Data Frames and 'ggplot2' Objects — ggswissmaps-package","text":"Offers various swiss maps data frames 'ggplot2' objects gives possibility add layers data maps. Data publicly available swiss federal statistical office. addition maps2 object (list 8 swiss maps, various levels), data frames boundaries used produce maps (shp_df, list 8 data frames).","code":""},{"path":[]},{"path":"http://gibonet.github.io/ggswissmaps/reference/ggswissmaps-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggswissmaps: Offers Various Swiss Maps as Data Frames and 'ggplot2' Objects — ggswissmaps-package","text":"Maintainer: Sandro Burri gibo.gaf@gmail.com Authors: Eric Stephani eric.stephani@bluewin.ch contributors: Lisa Bottinelli lisa.bottinelli@gmail.com [contributor]","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2.html","id":null,"dir":"Reference","previous_headings":"","what":"A list with 8 'ggplot2' objects of swiss territory boundaries, at various levels. — maps2","title":"A list with 8 'ggplot2' objects of swiss territory boundaries, at various levels. — maps2","text":"Every element list 'ggplot2' graphic, corresponding element shp_df.","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list with 8 'ggplot2' objects of swiss territory boundaries, at various levels. — maps2","text":"","code":"maps2"},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list with 8 'ggplot2' objects of swiss territory boundaries, at various levels. — maps2","text":"list 8 data frames swiss territory boundaries (various levels).","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A list with 8 'ggplot2' objects of swiss territory boundaries, at various levels. — maps2","text":"https://data.geo.admin.ch/browser/index.html#/collections/ch.bfs.historisierte-administrative_grenzen_g1?.language=en. Download date: 2015-08-18","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A list with 8 'ggplot2' objects of swiss territory boundaries, at various levels. — maps2","text":"Columns across data frames, usually following common: long. Longitude coordinate (x) lat. Latitude coordinate (y) group. factor used plot polygons correctly (ggplot2)","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A list with 8 'ggplot2' objects of swiss territory boundaries, at various levels. — maps2","text":"","code":"class(maps2) #> [1] \"list\" length(maps2) #> [1] 8 names(maps2) #> [1] \"g1b15\"      \"g1g15_encl\" \"g1g15_li\"   \"g1g15\"      \"g1k15\"      #> [6] \"g1l15\"      \"g1r15\"      \"g1s15\"      # str(maps2[[\"g1k15\"]])  # By name maps2[[\"g1k15\"]]   # By index maps2[[5]]"},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2_.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares the base of a map, starting from a data frame with longitude (long) and latitude (lat) coordinates, as a 'ggplot2' object — maps2_","title":"Prepares the base of a map, starting from a data frame with longitude (long) and latitude (lat) coordinates, as a 'ggplot2' object — maps2_","text":"Prepares base map, starting data frame longitude (long) latitude (lat) coordinates, 'ggplot2' object","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares the base of a map, starting from a data frame with longitude (long) and latitude (lat) coordinates, as a 'ggplot2' object — maps2_","text":"","code":"maps2_(   data,   mapping = ggplot2::aes(x = .data[[\"long\"]], y = .data[[\"lat\"]], group =     .data[[\"group\"]]),   caption = \"Boundaries: BFS GEOSTAT / swisstopo\" )"},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares the base of a map, starting from a data frame with longitude (long) and latitude (lat) coordinates, as a 'ggplot2' object — maps2_","text":"data data frame longitude, latitude group coordinates territory (polygons) mapping Aesthetic mappings, character strings (link{ggplot2::aes_string}). Defaults x = \"long\", y = \"lat\" group = \"group\" (work every element list shp_df ggswissmaps) caption text include lower right corner map (default: \"Boundaries: BFS GEOSTAT / swisstopo\")","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/maps2_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepares the base of a map, starting from a data frame with longitude (long) and latitude (lat) coordinates, as a 'ggplot2' object — maps2_","text":"","code":"data(shp_df) maps2_(data = shp_df[[1]])"},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_df.html","id":null,"dir":"Reference","previous_headings":"","what":"A list with 8 data frames of swiss territory boundaries, at various levels. — shp_df","title":"A list with 8 data frames of swiss territory boundaries, at various levels. — shp_df","text":"Every element list data frame, can used 'ggplot2'.","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list with 8 data frames of swiss territory boundaries, at various levels. — shp_df","text":"list 8 data frames swiss territory boundaries (various levels).","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A list with 8 data frames of swiss territory boundaries, at various levels. — shp_df","text":"https://data.geo.admin.ch/browser/index.html#/collections/ch.bfs.historisierte-administrative_grenzen_g1?.language=en. Download date: 2015-08-18","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A list with 8 data frames of swiss territory boundaries, at various levels. — shp_df","text":"Columns across data frames, usually following common: long. Longitude coordinate (x) lat. Latitude coordinate (y) group. factor used plot polygons correctly (ggplot2)","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A list with 8 data frames of swiss territory boundaries, at various levels. — shp_df","text":"","code":"data(shp_df) class(shp_df) #> [1] \"list\" length(shp_df) #> [1] 8 names(shp_df) #> [1] \"g1b15\"      \"g1g15_encl\" \"g1g15_li\"   \"g1g15\"      \"g1k15\"      #> [6] \"g1l15\"      \"g1r15\"      \"g1s15\"      str(shp_df[[\"g1k15\"]]) #> 'data.frame':\t9216 obs. of  20 variables: #>  $ long   : int  692429 692993 693163 693048 693243 693606 693763 693872 694800 695433 ... #>  $ lat    : int  281173 280860 280421 280201 279410 278826 278851 278450 278137 277578 ... #>  $ order  : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ hole   : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ piece  : Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ group  : Factor w/ 56 levels \"0.1\",\"1.1\",\"1.2\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ id     : chr  \"0\" \"0\" \"0\" \"0\" ... #>  $ KTNR   : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ GRNR   : int  4 4 4 4 4 4 4 4 4 4 ... #>  $ AREA_HA: int  172895 172895 172895 172895 172895 172895 172895 172895 172895 172895 ... #>  $ X_MIN  : int  669244 669244 669244 669244 669244 669244 669244 669244 669244 669244 ... #>  $ X_MAX  : int  716900 716900 716900 716900 716900 716900 716900 716900 716900 716900 ... #>  $ Y_MIN  : int  223896 223896 223896 223896 223896 223896 223896 223896 223896 223896 ... #>  $ Y_MAX  : int  283343 283343 283343 283343 283343 283343 283343 283343 283343 283343 ... #>  $ X_CNTR : int  691800 691800 691800 691800 691800 691800 691800 691800 691800 691800 ... #>  $ Y_CNTR : int  252000 252000 252000 252000 252000 252000 252000 252000 252000 252000 ... #>  $ Z_MIN  : int  331 331 331 331 331 331 331 331 331 331 ... #>  $ Z_MAX  : int  1290 1290 1290 1290 1290 1290 1290 1290 1290 1290 ... #>  $ Z_AVG  : int  533 533 533 533 533 533 533 533 533 533 ... #>  $ Z_MED  : int  504 504 504 504 504 504 504 504 504 504 ..."},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"A list with 8 'sf' objects of swiss territory boundaries, at various levels. — shp_sf","title":"A list with 8 'sf' objects of swiss territory boundaries, at various levels. — shp_sf","text":"Every element list 'sf' data frame, can used 'ggplot2'.","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list with 8 'sf' objects of swiss territory boundaries, at various levels. — shp_sf","text":"list 8 'sf' data frames swiss territory boundaries (various levels).","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A list with 8 'sf' objects of swiss territory boundaries, at various levels. — shp_sf","text":"https://data.geo.admin.ch/browser/index.html#/collections/ch.bfs.historisierte-administrative_grenzen_g1?.language=en. Download date: 2015-08-18","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A list with 8 'sf' objects of swiss territory boundaries, at various levels. — shp_sf","text":"Every 'sf' data frame column \"geometry\", list-column containing boundaries polygons. See vignette (vignette(\"ggswissmaps_with_sf\", package = \"ggswissmaps\")) examples.","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/shp_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A list with 8 'sf' objects of swiss territory boundaries, at various levels. — shp_sf","text":"","code":"data(shp_sf) class(shp_sf) #> [1] \"list\" length(shp_sf) #> [1] 8 names(shp_sf) #> [1] \"g1b15\"      \"g1g15_encl\" \"g1g15_li\"   \"g1g15\"      \"g1k15\"      #> [6] \"g1l15\"      \"g1r15\"      \"g1s15\"      str(shp_sf[[\"g1k15\"]]) #> Classes ‘sf’ and 'data.frame':\t26 obs. of  15 variables: #>  $ KTNR    : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ KTNAME  : Factor w/ 26 levels \"Aargau\",\"Appenzell Ausserrhoden\",..: 26 6 12 22 17 15 14 9 25 7 ... #>  $ GRNR    : int  4 2 6 6 6 6 6 5 6 2 ... #>  $ AREA_HA : int  172895 595956 149351 107657 90788 49058 27585 68532 23873 167136 ... #>  $ X_MIN   : int  669244 556241 630127 673344 672166 646044 659303 709273 672418 546837 ... #>  $ X_MAX   : int  716900 677745 681764 715795 718719 681479 686448 738138 695749 595531 ... #>  $ Y_MIN   : int  223896 130585 180569 153453 193658 178345 180483 183891 215061 143053 ... #>  $ Y_MAX   : int  283343 243834 237691 205339 231067 203582 208075 225967 233506 206219 ... #>  $ X_CNTR  : int  691800 614200 651000 690800 700100 658700 673600 723700 683300 573800 ... #>  $ Y_CNTR  : int  252000 185600 213100 180700 213100 189900 197700 204600 223500 173100 ... #>  $ Z_MIN   : int  331 399 398 429 403 433 432 410 386 427 ... #>  $ Z_MAX   : int  1290 4269 2347 3628 2800 3238 2896 3611 1579 2387 ... #>  $ Z_AVG   : int  533 1198 770 1900 1096 1337 1071 1579 664 855 ... #>  $ Z_MED   : int  504 979 680 1975 1053 1368 986 1594 638 750 ... #>  $ geometry:List of 26 #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:462, 1:2] 692429 692993 693164 693048 693243 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 4 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:10, 1:2] 573502 573996 574488 573485 572954 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:13, 1:2] 576276 575953 575698 575624 575659 ... #>   .. ..$ :List of 3 #>   .. .. ..$ : num [1:845, 1:2] 609050 608295 608275 608191 607596 ... #>   .. .. ..$ : num [1:13, 1:2] 583083 583237 584172 584431 584444 ... #>   .. .. ..$ : num [1:13, 1:2] 619076 619349 619491 619880 619396 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:14, 1:2] 609050 608734 607062 606738 607244 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:9, 1:2] 680075 680043 678760 678554 677848 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:304, 1:2] 662038 662272 662947 663142 663551 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:250, 1:2] 688457 688740 690109 690494 691191 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:206, 1:2] 705203 706142 707712 711321 712146 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:71, 1:2] 671653 671408 671400 671888 672115 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:107, 1:2] 662557 662684 663446 664159 665640 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:143, 1:2] 671798 672022 672837 675097 675220 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:156, 1:2] 723477 723896 726128 726694 727206 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:123, 1:2] 674192 674455 675064 675626 675924 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 5 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:18, 1:2] 549141 549376 549585 550150 550000 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:41, 1:2] 555811 555706 556010 556387 556752 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:70, 1:2] 558316 559221 559349 559471 559766 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:13, 1:2] 584444 584431 584172 583237 583083 ... #>   .. ..$ :List of 2 #>   .. .. ..$ : num [1:420, 1:2] 582841 583047 583200 583608 583843 ... #>   .. .. ..$ : num [1:13, 1:2] 575698 575953 576276 577114 576906 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 4 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:13, 1:2] 619251 619396 619880 619491 619349 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:20, 1:2] 599941 600738 601280 600669 599961 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:434, 1:2] 617430 619683 620446 619703 619607 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:41, 1:2] 605546 606064 607020 607082 607356 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:57, 1:2] 619155 617536 617561 618223 618262 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:15, 1:2] 595270 594299 593862 593916 592873 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:287, 1:2] 595270 598119 598651 599159 599961 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 3 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:37, 1:2] 686913 686814 686753 686398 685947 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:70, 1:2] 703039 702504 703084 703534 704051 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:168, 1:2] 684984 685166 686087 686476 687068 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:213, 1:2] 758853 758919 759394 759779 760087 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 3 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:66, 1:2] 746530 746449 747013 747067 747621 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:34, 1:2] 761002 761114 760889 760477 760277 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:27, 1:2] 760490 760511 760666 760820 761478 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 3 #>   .. .. ..$ : num [1:408, 1:2] 759599 760034 761118 761600 762497 ... #>   .. .. ..$ : num [1:9, 1:2] 751488 751515 751837 751792 752755 ... #>   .. .. ..$ : num [1:149, 1:2] 753080 751877 751285 750592 750418 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:816, 1:2] 760619 760945 763291 764440 764715 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:429, 1:2] 659052 659409 660161 660623 661633 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:9, 1:2] 753545 752664 752755 751792 751837 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:383, 1:2] 694804 695319 696037 696796 698975 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 2 #>   .. .. ..$ : num [1:413, 1:2] 716299 716755 716518 716728 717019 ... #>   .. .. ..$ : num [1:10, 1:2] 718571 719160 719418 719175 719250 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 2 #>   .. ..$ :List of 4 #>   .. .. ..$ : num [1:510, 1:2] 546733 546599 546750 546704 546230 ... #>   .. .. ..$ : num [1:41, 1:2] 553530 553226 553059 552364 552440 ... #>   .. .. ..$ : num [1:18, 1:2] 548933 549452 549468 550000 550150 ... #>   .. .. ..$ : num [1:8, 1:2] 502087 502432 502690 503235 503450 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:68, 1:2] 572089 573022 573441 573697 573502 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:576, 1:2] 675052 675336 674888 674271 674439 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:146, 1:2] 556973 556583 560307 561384 561876 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 3 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:125, 1:2] 500975 502272 504444 505345 506095 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:8, 1:2] 502778 503450 503235 502690 502432 ... #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:17, 1:2] 507834 507110 505167 504116 504260 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..$ :List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ : num [1:277, 1:2] 569712 569733 570305 570898 571527 ... #>   .. ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\" #>   ..- attr(*, \"n_empty\")= int 0 #>   ..- attr(*, \"crs\")=List of 2 #>   .. ..$ epsg       : int 21781 #>   .. ..$ proj4string: chr \"+proj=somerc +lat_0=46.9524055555556 +lon_0=7.43958333333333 +k_0=1 +x_0=600000 +y_0=200000 +ellps=bessel +units=m +no_defs\" #>   .. ..- attr(*, \"class\")= chr \"crs\" #>   ..- attr(*, \"class\")= chr [1:2] \"sfc_MULTIPOLYGON\" \"sfc\" #>   ..- attr(*, \"precision\")= num 0 #>   ..- attr(*, \"bbox\")= 'bbox' Named num [1:4] 485411 75287 833838 295934 #>   .. ..- attr(*, \"names\")= chr [1:4] \"xmin\" \"ymin\" \"xmax\" \"ymax\" #>  - attr(*, \"sf_column\")= chr \"geometry\" #>  - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ... #>   ..- attr(*, \"names\")= chr [1:14] \"KTNR\" \"KTNAME\" \"GRNR\" \"AREA_HA\" ..."},{"path":"http://gibonet.github.io/ggswissmaps/reference/theme_white_f.html","id":null,"dir":"Reference","previous_headings":"","what":"theme_white_f is a 'ggplot2' theme function that can be added to a 'ggplot2' object to eliminate axes, ticks and put white background — theme_white_f","title":"theme_white_f is a 'ggplot2' theme function that can be added to a 'ggplot2' object to eliminate axes, ticks and put white background — theme_white_f","text":"theme_white_f 'ggplot2' theme function can added 'ggplot2' object eliminate axes, ticks put white background","code":""},{"path":"http://gibonet.github.io/ggswissmaps/reference/theme_white_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme_white_f is a 'ggplot2' theme function that can be added to a 'ggplot2' object to eliminate axes, ticks and put white background — theme_white_f","text":"","code":"theme_white_f(base_size = 12, base_family = \"\")"},{"path":"http://gibonet.github.io/ggswissmaps/reference/theme_white_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme_white_f is a 'ggplot2' theme function that can be added to a 'ggplot2' object to eliminate axes, ticks and put white background — theme_white_f","text":"base_size base font size base_family base font family","code":""}]
